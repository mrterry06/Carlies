moduleConfiguration.$inject = ['$compileProvider'];
function moduleConfiguration($compileProvider) {
	$compileProvider.preAssignBindingsEnabled(true);
}
(function () {
  'use strict';

  angular.module('about', []);
})();
(function () {
	'use strict';

	angular.module('application', []);
})();
(function () {
	'use strict';

	angular.module('contactUs', []);
})();
(function () {
	'use strict';

	angular.module('employment', []);
})();
(function () {
	'use strict';

	angular.module('footer', []);
})();
(function () {
	'use strict';

	angular.module('prodForm', []);
})();
(function () {
	'use strict';

	angular.module('header', []);
})();
(function () {
  'use strict';

  angular.module('homePage', []);
})();
(function () {
  'use strict';

  angular.module('navigation', []);
})();
(function () {
  'use strict';

  angular.module('products', []);
})();
(function () {
	'use strict';

	angular.module('homePage').constant('homePageContent', {
		title: 'Prodception',
		description: 'Prodception is a revolutionay company designed to create amazing products and services',
		about: 'About',
		psExplanation: 'When we mention P&S(product and services) it extends beyond the idea of items.\n\t\t\tAt Prodception any brand under our covering is a product and what they provide is what we call\n\t\t\tthe service. We have a wide variety of product each offering a different service. We have a desire\n\t\t\tto provide services to every person possible and for that very reason Prodception was born.'
	});
})();
(function () {
	angular.module('about').controller('aboutController', controller);

	controller.$inject = ['$scope'];
	function controller($scope) {
		var vm = this;
		vm.content = {
			title: 'Prodception',
			about: 'AMAZING ASS PROTDUCTDAFA',
			description: 'AMAINGGG ASS PRODUCt'
		};
	};
})();
(function () {
  'use strict';

  angular.module('about').directive('about', function () {
    return {
      restrict: 'E',
      templateUrl: 'app/js/components/about/about.html',
      controller: 'aboutController as about'
    };
  });
})();

(function () {
  'use strict';

  angular.module('application').controller('applicationController', controller);

  controller.$inject = ['$state', '$scope', '$http', 'SubmitService'];
  function controller($state, $scope, $http, SubmitService) {
    var vm = this;
    vm.formContent = {
      heading: 'Apply Today',
      subheading: 'Send us a message and we will try to get back to you as soon as possible'
    };
  }
})();
(function () {
	'use strict';

	angular.module('application').directive('application', directive);

	function directive() {
		return {
			restrict: 'E',
			templateUrl: 'app/js/components/application/application.html',
			controller: 'applicationController as application'
		};
	}
})();
(function () {
  'use strict';

  angular.module('contactUs').controller('contactController', controller);

  controller.$inject = ['$state', '$scope', '$http', 'SubmitService'];
  function controller($state, $scope, $http, SubmitService) {
    var vm = this;

    vm.formContent = {
      heading: 'Contact Us',
      subheading: 'Send us a message and we will try to get back to you as soon as possible'
    };
  }
})();
(function () {
	'use strict';

	angular.module('contactUs').directive('contactUs', directive);

	function directive() {
		return {
			restrict: 'E',
			templateUrl: 'app/js/components/contact-us/contact.html',
			controller: 'contactController as contact'
		};
	}
})();

(function () {
  'use strict';

  angular.module('employment').controller('employmentController', controller);

  controller.$inject = ['employmentService'];
  function controller(employmentService) {
    var vm = this;

    vm.positions = employmentService.getJobListings();
  }
})();
(function () {
	'use strict';

	angular.module('employment').directive('employment', directive);

	function directive() {
		return {
			restrict: 'E',
			templateUrl: 'app/js/components/employment/employment.html',
			controller: 'employmentController as employment'
		};
	}
})();
(function () {
  'use strict';

  angular.module('employment').service('employmentService', service);

  service.$inject = [];
  function service() {
    var service = this;
    var jobListings = [{
      position: 'Administrative Director',
      description: ' The Administrative Director is responsible for the strategic planning process,\n  \t\t research administration and grant management activities, financial performance, \n  \t\thuman resources development, training programs, and facilities planning and management for the division. \n  \t\tThis position reports to the President and to the executive administrator;',
      requirements: ['5-7 years administrative/management experience required', 'Supervisory experience required.', 'Strong Communication and analytical skills']
    }, {
      position: 'Marketing & Media Director',
      description: 'Champion brand advertising through all channels - outdoor, mass media, and online. \n  \t\t\tWork with agency to develop and produce new creative. Evaluate media strategy in each market. \n  \t\t\tContinually scrutinize and test second tier delivery vehicles.',
      requirements: ['3 years plus experience in an agency or a consumer marketing company.', 'Creative, organized, hardworking.', 'Strong analytical ability. Working SEO/SEM/Social knowledge.']
    }, {
      position: 'Backend Developer',
      description: 'Working on Servers and API\'s using Node.js. \n  \t\t\tIn this role you will focus on Server Side Web Application Development, \n  \t\t\tWeb service architecture, documentation, code reviews and pair programming.',
      requirements: ['3+ years of relevant Experience', 'Experienced with Node.JS & Express', 'Unit Testing experience with Mocha/Chai, NPM OR PostGreSql', 'Experience building & Architecting RESTful Web Services & API\'s', 'Documenting and designing API\'s with OpenApi & Swagger', 'Git source Control via command line']
    }, {
      position: 'Staff Accountant',
      description: 'Provides administrative support to the Finance department. \n  \t\t\tMaintains and updates Accounting/Finance records ensuring timeliness and accuracy. \n  \t\t\tResponsible for assisting in a key capacity with month-end close, account reconciliations, \n  \t\t\tmonthly business review package, forecasts and budgets, expense management and other analytical tasks.',
      requirements: ['1-2 Years of experience required', 'Demonstrated understanding of accounting concepts and theories used in the business environment.', 'Proven verbal and written communication skills with the ability to communicate effectively to various \n\t\t\tlevels within the organization as well as to external customers and vendors.', 'Strong Microsoft Office and overall computer proficient with Excel.', 'Strong problem solving and trouble shooting skills.']
    }];

    service.getJobListings = function () {
      return jobListings;
    };
  }
})();
(function () {
  'use strict';

  angular.module('footer').controller('footerController', controller);

  controller.$inject = ['$state', 'NavigationService'];
  function controller($state, NavigationService) {
    var vm = this;

    vm.navigate = function (route) {
      NavigationService.closeMenu();
      $state.go(route);
    };

    vm.routes = [{
      route: 'apply',
      format: 'Apply Now'
    }, {
      route: 'employment',
      format: 'Employment'
    }, {
      route: 'contact-us',
      format: 'Contact Us'
    }];
  }
})();
(function () {
	'use strict';

	angular.module('footer').directive('footer', directive);

	function directive() {
		return {
			restrict: 'E',
			templateUrl: 'app/js/components/footer/footer.html',
			controller: 'footerController as footer'
		};
	}
})();
(function () {
	'use strict';

	angular.module('prodForm').controller('prodFormController', controller);

	controller.$inject = ['$state', '$scope', '$http', 'SubmitService', 'FormService'];
	function controller($state, $scope, $http, SubmitService, FormService) {
		var vm = this;

		vm.formData = {};
		vm.submitError = false;
		vm.submitSucess = false;

		vm.formConfigurations = FormService.getFormConfigurations(vm.isContactUs);

		console.log($scope);
		vm.submit = function () {
			if ($scope[vm.formType].$valid && false) {
				SubmitService.sendMessage(vm.path, vm.formData).then(function () {
					vm.submitSucess = true;
					console.log(' ' + vm.formType + ' submitted sucessfully');
				}, function () {
					vm.submitError = true;
				}).catch(function () {
					vm.submitError = true;
				});
			}
		};
	}
})();
(function () {
	'use strict';

	angular.module('prodForm').directive('prodForm', directive);

	function directive() {
		return {
			restrict: 'E',
			templateUrl: 'app/js/components/form/form.html',
			controller: 'prodFormController as form',
			bindToController: {
				formType: '<',
				path: '<',
				content: '=',
				isApplication: '<',
				isContactUs: '<'
			}
		};
	}
})();
(function () {
	'use strict';

	angular.module('prodForm').service('FormService', service);

	function service() {
		var service = this;
		var formConfigurations = {
			firstname: {
				formattedName: 'First Name',
				type: 'text',
				id: 'firstname',
				minlength: 2,
				maxlength: 15,
				required: true
			},
			lastname: {
				formattedName: 'Last Name',
				type: 'text',
				id: 'lastname',
				minlength: 2,
				maxlength: 15,
				required: true
			},
			phone: {
				formattedName: 'Phone',
				type: 'tel',
				id: 'phone',
				minlength: 10,
				maxlength: 11,
				required: false
			},
			email: {
				formattedName: 'Email',
				type: 'email',
				id: 'email',
				required: true
			},
			zipcode: {
				formattedName: 'Zip Code',
				type: 'tel',
				id: 'zipcode',
				minlength: 5,
				maxlength: 5,
				required: true
			},
			company: {
				formattedName: 'Company',
				type: 'text',
				id: 'company',
				minlength: 2,
				required: true
			}
		};

		service.getFormConfigurations = function (isContactUs) {
			var conactUsForm = ['firstname', 'lastname', 'email', 'phone'];
			if (isContactUs) {
				return conactUsForm.map(function (id) {
					return formConfigurations[id];
				});
			}

			return mapObj(formConfigurations, function (fieldConfig) {
				return fieldConfig;
			});
		};

		function mapObj(obj, callback) {
			var transformedData = [];
			for (var key in obj) {
				transformedData.push(callback(obj[key], key));
			}
			return transformedData;
		}
	}
})();

(function () {
	'use strict';

	angular.module('header').directive('header', directive);

	function directive() {
		return {
			restrict: 'E',
			templateUrl: 'app/js/components/header/header.html'
		};
	}
})();
(function () {
	angular.module('homePage').controller('homePageController', controller);

	controller.$inject = ['$scope', 'homePageContent'];
	function controller($scope, homePageContent) {
		var vm = this;
		vm.content = homePageContent;
		vm.productCategories = [{
			title: 'Technology',
			source: 'app/images/smartphone-1.svg'
		}, {
			title: 'Real Estate',
			source: 'app/images/flats.svg'
		}, {
			title: 'Storage Services',
			source: 'app/images/package.svg'
		}];
	};
})();
(function () {
  'use strict';

  angular.module('homePage').directive('homePage', function () {
    return {
      restrict: 'E',
      templateUrl: 'app/js/components/home_page/home_page.html',
      controller: 'homePageController as homepage'
    };
  });
})();

(function () {
  'use strict';

  angular.module('navigation').controller('navigationController', controller);

  controller.$inject = ['$state', 'NavigationService'];
  function controller($state, NavigationService) {
    var vm = this;
    vm.menuSettings = NavigationService;

    vm.toggleMenu = function () {
      vm.menuSettings.isMenuOpen = !vm.menuSettings.isMenuOpen;
    };

    vm.navigate = function (route) {
      $state.go(route);
      vm.menuSettings.closeMenu();
    };

    vm.routes = [{
      route: 'home',
      format: 'Home'
    }, {
      route: 'about',
      format: 'About'
    }, {
      route: 'products',
      format: 'Products'
    }, {
      route: 'apply',
      format: 'Apply Now'
    }, {
      route: 'contact-us',
      format: 'Contact Us'
    }];
  }
})();
(function () {
  'use strict';

  angular.module('navigation').directive('navigation', function () {
    return {
      restrict: 'E',
      templateUrl: 'app/js/components/navigation/navigation.html',
      controller: 'navigationController as navigation'
    };
  });
})();
(function () {
	'use strict';

	angular.module('navigation').service('NavigationService', service);

	service.$inject = ['ScrollingService'];
	function service(ScrollingService) {
		var service = this;

		service.isMenuOpen = false;

		service.closeMenu = function () {
			service.isMenuOpen = false;
			ScrollingService.scrollToTop(true);
		};
	}
})();
(function () {
	angular.module('products').controller('productsController', controller);

	controller.$inject = ['$scope'];
	function controller($scope) {
		var vm = this;
		vm.content = {
			title: 'Prodception',
			about: 'AMAZING ASS PROTDUCTDAFA',
			description: 'AMAINGGG ASS PRODUCt'
		};
	};
})();
(function () {
  'use strict';

  angular.module('products').directive('products', function () {
    return {
      restrict: 'E',
      templateUrl: 'app/js/components/products/products.html',
      controller: 'productsController as products'
    };
  });
})();

(function () {

  angular.module('templates', []);

  angular.module('app', ['ui.router', 'templates', 'ngMessages', 'ngAnimate',
  //Custom components
  'navigation', 'header', 'footer', 'homePage', 'contactUs', 'about', 'products', 'application', 'prodForm', 'employment',
  //Services
  'ScrollingService', 'SubmitService',
  //Constants
  'globalConstants']);

  angular.module('app').config(appConfiguration);
  appConfiguration.$inject = ['$stateProvider', '$urlRouterProvider', '$compileProvider'];
  function appConfiguration($stateProvider, $urlRouterProvider, $compileProvider) {

    $compileProvider.preAssignBindingsEnabled(true);
    $stateProvider.state('home', {
      url: '/',
      template: '<home-page></home-page>'
    }).state('about', {
      url: '/about',
      template: '<about></about>'
    }).state('products', {
      url: '/products',
      template: '<products></products>'
    }).state('apply', {
      url: '/apply',
      template: '<application></application>'
    }).state('employment', {
      url: '/employment',
      template: '<employment></employment>'
    }).state('contact-us', {
      url: '/contact-us',
      template: '<contact-us></contact-us>'
    });

    $urlRouterProvider.otherwise('/');
  }

  //Do this on run time
  angular.module('app').run(appRun);
  appRun.$inject = ['$rootScope', '$window'];
  function appRun($rootScope, $window) {
    //ScrollToTop on changed state
    $rootScope.$on('$stateChangeSuccess', function () {
      console.log('running');
      $window.scrollTo(0, 0);
    });
  }
})();
(function () {
	'use strict';

	angular.module('ScrollingService', []).service('ScrollingService', scrollingService);
	scrollingService.$inject = ['$window'];
	function scrollingService($window) {
		var service = this,
		    defaultDuration = 700,
		    defaultVerticalOffset = 100;

		var oldTimestamp = void 0,
		    cosineParameter = void 0,
		    scrollCount = void 0,
		    step = void 0,
		    isUpwardScroll = void 0,
		    destination = void 0;

		service.scrollToTop = function (shouldNotAnimate) {
			resetConfigurationVariables();
			isUpwardScroll = true;
			step = function step(newTimestamp) {
				scrollCount += Math.PI / (defaultDuration / (newTimestamp - oldTimestamp));

				if (scrollCount >= Math.PI) $window.scrollTo(0, 0);
				if ($window.scrollY <= 5) return;

				beginScrolling(newTimestamp);
			};

			$window.requestAnimationFrame(step);
		};

		service.scrollToElement = function (options) {
			resetConfigurationVariables(options);

			step = function step(newTimestamp) {
				scrollCount += Math.PI / ((options.duration || defaultDuration) / (newTimestamp - oldTimestamp));

				if (scrollCount >= Math.PI) {
					$window.scrollTo(0, destination);
					return;
				}
				if (isAtDestination()) {
					if (options.onScrollFinish) {
						options.onScrollFinish();
					}
					return;
				}

				beginScrolling(newTimestamp);
			};
		};

		function isAtDesitnation() {
			if (isUpwardScroll) {
				return $window.scrollY === 0 || $window.scrollY <= destination;
			}

			return $window.scrollY === $window.innerHeight || $window.scrollY >= destination;
		}

		function beginScrolling(newTimestamp) {
			var yDestination = Math.round(cosineParameter + cosineParameter * Math.cos(scrollCount));
			if (!isUpwardScroll) {
				yDestination = $window.scrollY + 30;
			}

			$window.scrollTo(0, yDestination);
			oldTimestamp = newTimestamp;
			$window.requestAnimationFrame(step);
		}

		function resetConfigurationVariables(options) {
			if (options) {
				destination = getElementOffset(options.element) - (options.verticalOffset || defaultVerticalOffset);
				isUpwardScroll = destination < $window.scrollY;
			}
			cosineParameter = $window.scrollY / 2;
			scrollCount = 0;
			oldTimestamp = performance.now();
		}

		function getElementOffset(element) {
			var documentElement = document.documentElement,
			    box = element.getBoundingClientRect(),
			    top = box.top + $window.pageYOffset - documentElement.clientTop;
			return top;
		}
	}
})();
(function () {
	'use strict';

	service.$inject = ["$http"];
	angular.module('SubmitService', []).service('SubmitService', service);

	function service($http) {
		var requestRoot = 'http://localhost:3000';
		var service = this;

		service.sendMessage = function (path, data) {
			return $http.post(requestRoot + path, data);
		};
	}
})();
(function () {
	'use strict';

	angular.module('globalConstants', []).constant('globalConstants', {
		companyName: 'Prodception',
		companySlogan: 'Where amazing product begins'
	});
})();
angular.module('templates').run(['$templateCache', function ($templateCache) {
  $templateCache.put('app/js/components/about/about.html', '<div><h1 ng-bind="about.content.title"></h1><h2 ng-bind="about.content.about"></h2><p>{{about.static}}</p><hr><p ng-bind="about.content.description"></p><h1>Meet Us</h1><hr><h2>President, CEO, Founder</h2><img height="400" src="app/images/scott_terry.jpg"></div>');
  $templateCache.put('app/js/components/application/application.html', '<div><prod-form form-type="\'application\'" content="application.formContent" is-application="true" path="\'/client/application\'"></prod-form></div>');
  $templateCache.put('app/js/components/contact-us/contact.html', '<div id="contact"><prod-form form-type="\'contact-us\'" content="contact.formContent" is-contact-us="true" path="\'/contact/message\'"></prod-form></div>');
  $templateCache.put('app/js/components/employment/employment.html', '<h1>Work at Prodception</h1><p>Prodception is a revolutionary company. Part of what makes it that is our amazing workers. Come Join us in being a company that is changing the way business is managed.</p><div class="Job Listings"><h3>Open Positions</h3><hr><b ng-if="!employment.positions.length">There are currently no open positions</b><div ng-if="employment.positions.length"><div ng-repeat="position in employment.positions"><h3 ng-bind="position.position"></h3><hr><p class="description" ng-bind="position.description"></p><ul class="requirements"><li ng-repeat="requirement in position.requirements" ng-bind="requirement"></li></ul><button ng-bind="\'Apply Now\'"></button><hr></div></div></div>');
  $templateCache.put('app/js/components/footer/footer.html', '<fieldset class="footer"><legend><img height="60" src="app/images/plog.png"></legend><p>Prodception 2017 all rights reserved</p><ul><li ng-repeat="item in footer.routes" ng-click="footer.navigate(item.route)" ng-bind="item.format"></li></ul></fieldset>');
  $templateCache.put('app/js/components/form/form.html', '<div id="form" class="container"><h2 ng-bind="form.content.heading"></h2><p ng-bind="form.content.subheading"></p><form name="{{ form.formType }}"><div class="input-container"><label ng-repeat="field in form.formConfigurations" for="{{field.id}}" class="col col-sm-12 col-md-6 col-lg-6">{{ field.formattedName}} <input class="form-control" type="{{ field.type}}" name="{{field.id}}" ng-model="form.formData[field.id]" minlength="field.minlength" maxlength="field.maxlength" required="field.required"></label><p ng-if="form.isApplication">Tell us about your Idea or company</p><label class="col col-sm-12 col-md-12 col-lg-12">Message<textarea class="form-control" ng-model="application.applicationData.message" minlength="10" rows="6"></textarea></label></div><button ng-bind="\'Submit\'" ng-click="form.submit()"></button></form></div>');
  $templateCache.put('app/js/components/header/header.html', '');
  $templateCache.put('app/js/components/home_page/home_page.html', '<div class="header"><div class="background"></div><h3>Prodception</h3></div><div class="companyExplanation"><h2>The Central Hub for Product Conception and Production</h2><hr><p>The list of businesses under the Prodception umbrella is growing and will continually expand. With a new way of approaching company management Prodception changes the way businesses are started and the approach to expansion. Our Products and Services will always provide quality, excellence and effiecency.</p></div><div class="productCategories"><h3>We have companies in the following areas</h3><hr><div class="icon-container"><div ng-repeat="category in homepage.productCategories"><h3 class="title" ng-bind="category.title"></h3><img ng-src="{{category.source}}"></div></div></div><div class="reach-out"><img src="app/images/stacked_iphones.jpeg"></div><div class="product-list"></div><div class="services-talk"></div><div class="last-message"></div>');
  $templateCache.put('app/js/components/navigation/navigation.html', '<div id="navigation"><div class="navigation-bar"><p ng-click="navigation.navigate(\'home\')">Prodception</p><i class="icon-menu" ng-show="!navigation.menuSettings.isMenuOpen" ng-click="navigation.toggleMenu()"></i> <i class="icon-minus" ng-show="navigation.menuSettings.isMenuOpen" ng-click="navigation.toggleMenu()"></i></div><div class="navigation-menu animate" ng-if="navigation.menuSettings.isMenuOpen"><ul><li ng-repeat="item in navigation.routes" ng-click="navigation.navigate(item.route)" ng-bind="item.format"></li></ul></div></div>');
  $templateCache.put('app/js/components/products/products.html', '<div><h1>SOME AMAIZNG FASS DFKFDSAS</h1><p>Yes this works with Prodcts</p></div>');
}]);